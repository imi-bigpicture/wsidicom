# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cache_test_images:
    name: cache test images
    runs-on: ubuntu-latest
    steps:
      - name: Load test images from cache
        id: cache-test-images
        uses: actions/cache@v2
        with:
          key: test-image-cache-v1.0.1
          path: SLIDE_FOLDER
      - name: Load test images
        if: steps.cache-test-images.outputs.cache-hit != 'true'
        # we should call a script provided in the repo
        run: |
          mkdir -p tests/testdata/slides
          python tests/download_test_images.py

  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install poetry
    - name: Install Application
      run: python -m poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
        
    # cross os caching support, see: https://github.com/actions/cache/issues/591
    - name: "Use GNU tar instead BSD tar"
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
    - name: Load test images from cache
      id: cache-test-images
      uses: actions/cache@v2
      with:
        key: test-image-cache-v1.0.1
        path: SLIDE_FOLDER
    - name: Check test images are loaded
      if: steps.cache-test-images.outputs.cache-hit != 'true'
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('test images were not cached')
    - name: Test with pytest, only unittests as there is no test data yet.
      run: python -m poetry run pytest -m unittest
